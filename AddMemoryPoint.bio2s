#include "std\lodNames.inc"
#include "std\o2config.inc"
#include "std\paramFile.inc"
#include "CheckMat.inc.bio2s"
#include "std\flags.inc"

//written to add an "Origin" memory point to models for surface height checks when autocenter 0 isn't set in geometry for various reasons.

/* powershell example
$files = Get-ChildItem -Recurse -include *.p3d
foreach ($file in $files){
write-host $file
& "D:\SteamLibrary\steamapps\common\DayZ Tools\Bin\ObjectBuilder\O2Script.exe" -a "D:\SteamLibrary\steamapps\common\DayZ Tools\Bin\ObjectBuilder\O2Scripts\AddMemoryPoint.bio2s" $file
}
*/

scopeName "CheckAll";

console=openStandardIO;

if (typename this=="STRING") then
{
	p3d=newLODObject;
	p3dname=this;
	if (!(p3d loadP3d this)) then {	console<<"Unable to open:"<<this<<eoln;BreakTo "CheckAll";};
	runFromO2=false;
	texpath=((splitPath p3dname) @ 0);
	console<<"----------------------------------------------------------------------"<<eoln;
	console<<"Checking file: "<<p3dname<<eoln;
}
else
{
	p3dname=nameof this;
	p3dname=splitPath p3dname;
	p3dname=p3dname @ 2 + p3dname @ 3;
	runFromO2=true;
	p3d=this;
	texpath=o2GetConfig IDS_CFGPATHFORTEX;
	console<<"--------- Checking "<<p3dname<<" ------"<<eoln;
};

_sourcePath = texpath;
_targetPath = _sourcePath;

_changed = false;
_added = false;

_last = 0;

_AddMemPoint=
{
	_LODs			= getObjects p3d;
	_resolutions	= getResolutions p3d;
	_objects		= getObjects p3d;
	for "_i" from 0 to ((count p3d) - 1) do
		{
			_currentLOD			= _LODs @ _i;
			_currentResolution	= _resolutions @ _i;
			_currentObject		= _objects @ _i;

			if(LOD_MEMORY == _currentResolution)then
			{
				_changed = true;
				_x = _currentLOD addPoint [0,0,0];
				_sel = newSelection _currentObject;
				_sel selectPoint _x;
				_currentObject save _sel as ('Origin');
			};
			_last = _currentResolution;
		};
};

_CleanMemPoint=
	{
	_LODs			= getObjects p3d;
	_resolutions	= getResolutions p3d;
	_objects		= getObjects p3d;
	for "_i" from 0 to ((count p3d) - 1) do
		{
			_currentLOD			= _LODs @ _i;
			_currentResolution	= _resolutions @ _i;
			_currentObject		= _objects @ _i;

			if(LOD_MEMORY == _currentResolution)then
			{
				{
					_selection = _currentLOD loadSelection _x;
					deleteSelected _selection;
				} forEach (getSelections _currentLOD);
			};
		};
	};

call _AddMemPoint;
	if (!_changed) then
	{
		if (!_added) then
		{	
			_added = true;
			_obj2=addLevel p3d;
			p3d setResolution CALCSPECLOD(1);
			_obj=p3d getObject (p3d findLevelSpecial _last);
			_obj2:=_obj;
			save p3d;
			p3d loadP3D _sourcePath;
			call _CleanMemPoint;
			call _AddMemPoint;
		};
	};	

if (_changed) then
	{
		console<<"Added Origin to memory lod"<<eoln;
		if (!save p3d)then {console <<"unable to SAVE "<<p3dname<<eoln;};
	};