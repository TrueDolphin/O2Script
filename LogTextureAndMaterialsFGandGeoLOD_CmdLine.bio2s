#include "std\lodNames.inc"
console=openStandardIO;

//example usage
//O2Script.exe -a O2Scripts\LogTextureAndMaterialsFGandGeoLOD_CmdLine.bio2s p:\test\name.p3d

//Library methods
//==================

_logTexturesAndMaterials =
{
	private["_currentLOD","_texList","_matList"];
	_currentLOD = _this;

//	_texList = (_currentLOD callRuntime "texlist");
	_matList = (_currentLOD callRuntime "matlist");

/*
	{
//		_faceIndex = _x;
//		_texture = getTexture (_currentLOD face _faceIndex)
		console<<"_textures: "<<_x<<eoln;
	} forEach _texList;
*/

	{
//		_faceIndex = _x;
//		_material = getMaterial (_currentLOD face _faceIndex)
		console<<"_materials: "<<_x<<eoln;
	} forEach _matList;
};

_convertLODNumberToString =
{
	private["_currentLOD","_texList","_matList"];
	_currentLOD = _this;

	_return = switch (_currentLOD) do
	{
		case LOD_VIEWGEO:		{"VIEWGEO"};
		case LOD_FIREGEO:		{"FIREGEO"};
		case LOD_VIEW_CARGO_GEOMETRY:	{"VIEW_CARGO_GEOMETRY"};
		case LOD_VIEW_CARGO_FGEOMETRY:	{"VIEW_CARGO_FGEOMETRY"};
		case LOD_VIEW_COMM_GEOMETRY:	{"VIEW_COMM_GEOMETRY"};
		case LOD_VIEW_COMM_FGEOMETRY:	{"VIEW_COMM_FGEOMETRY"};
		case LOD_VIEW_PILOT_GEOMETRY:	{"VIEW_PILOT_GEOMETRY"};
		case LOD_VIEW_PILOT_FGEOMETRY:	{"VIEW_PILOT_FGEOMETRY"};
		case LOD_VIEW_GUNNER_GEOMETRY:	{"VIEW_GUNNER_GEOMETRY"};
		case LOD_VIEW_GUNNER_FGEOMETRY:	{"VIEW_GUNNER_FGEOMETRY"};
		case LOD_GEOMETRY:		{"GEOMETRY"};

		default {"notFound"};
	};

	_return
};

// main
_sourcePath = this @ 0;
_targetPath = _sourcePath;

_p3d = newLODObject;
_p3d loadP3D _sourcePath;

_LODs = getObjects _p3d;
_resolutions = getResolutions _p3d;

console<<"_sourcePath: "<<_sourcePath<<eoln;

_lastResLOD = 0;

for "_i" from 0 to ((count _p3d) - 1) do
{
	private["_currentLOD","_currentResolution"];
	_currentLOD = _LODs @ _i;
	_currentResolution = _resolutions @ _i;

	if (IS_LOD_GEOMETRY(_currentResolution)) then
	{
		_currentLODasString = _currentResolution call _convertLODNumberToString;
		console<<"_currentResolution: "<<_currentLODasString<<eoln;

		_currentLOD call _logTexturesAndMaterials;
	};
};

//console<<"_lastResLOD: "<<str _lastResLOD<<eoln;

// revert
if (true) exitWith {-1};
